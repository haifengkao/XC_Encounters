Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// See XC_Start/XC_Tools.txt for the reason why we directly modify this file.
//
// When I change this file already, I also reformat the code to readable ...
// (I wonder how they can even stand looking at their own code ... oh, I know, they never actually look at it but instead
//  only ever stare at some Excel sheet where they hold their pre-defined databases and procedures. Why would a modern
//  programmer need to know how things actually works, the whole internet works this way, hacking without real knowledge ;-)
//
// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//REGION CHECK FOR TREASURE
IF
	DB_ShovelArea( (TRIGGER)_Trigger, (STRING)_, (ITEM)_ )
THEN
	ProcTriggerRegisterForPlayers( _Trigger );

IF
	DB_ShovelRewardItemAppear( _, _Item, _ )
THEN
	ItemSetOnstage( _Item, 0 );

IF
	DB_ShovelRewardItemSpawn(_,_Item)
THEN
	ItemSetOnstage(_Item,0);

IF
	DB_ShovelRewardCharacterAppear(_,_Character)
THEN
	CharacterSetOnStage(_Character,0);


// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// CHANGE:
// - root template changed which disables the old shovel
//   old template: TOOL_Shovel_A_41486dd2-3fd5-464e-870e-844120cf0517
//
// Dig while in a trigger
IF
	CharacterUsedItemTemplate( _Player, "XC_Tool_General_Shovel_7b29fbdb-6a51-42af-85a1-30e5b24fe18f", _ShovelHandle )
	AND
	DB_ShovelArea( _Trigger, _, _DirtPile )
	AND
	DB_InRegion( _Player, _Trigger )
	AND
	NOT DB_Shovelling_Mound( _, _DirtPile )
	AND
	CharacterIsInFightMode( _Player, _WasInFightMode )
THEN
	DB_Shovelling_Mound( _Player, _DirtPile );
	CharacterSetFightMode( _Player, 0, 1 );
	CharacterFreeze( _Player );
	CharacterPlayAnimation( _Player, "use_dig", "digmound" );
	DB_Shovel_PlayerHadWeaponDrawn( _Player, _WasInFightMode );

// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// CHANGE:
// - root template changed which disables the old shovel
//   old template: TOOL_Shovel_A_41486dd2-3fd5-464e-870e-844120cf0517
//
// Dig outside a trigger
IF
	CharacterUsedItemTemplate( _Player, "XC_Tool_General_Shovel_7b29fbdb-6a51-42af-85a1-30e5b24fe18f", _ShovelHandle )
	AND
	NOT DB_Shovelling_Mound( _Player, _ )
	AND
	CharacterIsInFightMode( _Player, _WasInFightMode )
THEN
	CharacterSetFightMode( _Player, 0, 1 );
	CharacterFreeze( _Player );
	CharacterPlayAnimation( _Player, "use_dig", "digmound" );
	DB_Shovel_PlayerHadWeaponDrawn( _Player, _WasInFightMode );

// Changed:
// - root template
// - look only in character inventory and no longer in party inventory
//
// Dig by interacting with pile without a shovel
IF
	CharacterUsedItem( _Player, _DirtPile )
	AND
	DB_ShovelArea( _, _, _DirtPile )
	AND
	ItemTemplateIsInCharacterInventory( _Player, "XC_Tool_General_Shovel_7b29fbdb-6a51-42af-85a1-30e5b24fe18f", 0 )
THEN
	CharacterDisplayText( _Player, "GLO_ShovelRequired" );

// Changed:
// - root template
// - look only in character inventory and no longer in party inventory which disables 'Magic Pockets'
//
// Dig by interacting with pile with a shovel
IF
	CharacterUsedItem( _Player, _DirtPile )
	AND
	DB_ShovelArea( _, _, _DirtPile )
	AND
	NOT DB_Shovelling_Mound( _, _DirtPile )
	AND
	ItemTemplateIsInCharacterInventory( _Player, "XC_Tool_General_Shovel_7b29fbdb-6a51-42af-85a1-30e5b24fe18f", _Count )
	AND
	_Count > 0
	AND
	CharacterIsInFightMode( _Player, _WasInFightMode )
THEN
	DB_Shovelling_Mound( _Player, _DirtPile );
	CharacterSetFightMode( _Player, 0, 1 );
	CharacterFreeze( _Player );
	CharacterPlayAnimation( _Player, "use_dig", "digmound" );
	DB_Shovel_PlayerHadWeaponDrawn( _Player, _WasInFightMode );


// After Dig
IF
	CharacterEvent( _Player, "digmound" )
	AND
	NOT DB_Shovelling_Mound( _Player, _ )
THEN
	CharacterDisplayText( _Player, "GEN_Shovel_Failed" );

IF
	CharacterEvent( _Player, "digmound" )
	AND
	DB_Shovelling_Mound( _Player, _DirtMound )
	AND
	DB_ShovelArea( _Trigger, _Reward, _DirtMound )
THEN
	NOT DB_ShovelArea( _Trigger, _Reward, _DirtMound );
	NOT DB_Shovelling_Mound( _Player, _DirtMound );
	ItemSetOnstage( _DirtMound, 0 );
	ProcShovelRewards( _Player, _Reward );

IF
	CharacterEvent( _Player, "digmound" )
	AND
	DB_Shovel_PlayerHadWeaponDrawn( _Player, 1 )
THEN
	CharacterSetFightMode( _Player, 1, 0 );

IF
	CharacterEvent( _Player, "digmound" )
	AND
	DB_Shovel_PlayerHadWeaponDrawn( _Player, _Value )
THEN
	NOT DB_Shovel_PlayerHadWeaponDrawn( _Player, _Value );

IF
	CharacterDied( _Player )
	AND
	DB_Shovel_PlayerHadWeaponDrawn( _Player, _Value )
THEN
	CharacterUnfreeze( _Player );

IF
	CharacterDied( _Player )
	AND
	DB_Shovelling_Mound( _Player, _DirtPile )
THEN
	NOT DB_Shovelling_Mound( _Player, _DirtPile );

IF
	CharacterEvent( _Player, "digmound" )
THEN
	CharacterUnfreeze( _Player );
//END_REGION


//REGION SHOVEL REWARDS
// item directly given to digger
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardItemAdd( _Reward, (ITEM)_Item )
THEN
	ItemToCharacter( _Item, _Player );

// reward appears and is 'dragged' to trigger, whatever that means
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardItemAppear( _Reward, (ITEM)_Item, (TRIGGER)_Trigger )
THEN
	ItemSetOnstage( _Item, 1 );
	ItemDragToTrigger( _Item, _Trigger );

// dug out a character (skeletons or zombies at a graveyard)
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardCharacterAppear( _Reward, (CHARACTER)_Character )
THEN
	CharacterAppear( _Character, 1 );

// on stage and no drag to trigger, well ...
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardItemSpawn( _Reward, (ITEM)_Item )
THEN
	ItemSetOnstage( _Item, 1 );

// create item from template
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardItemTemplate( _Reward, (STRING)_ItemTemplate, (INTEGER)_Amount )
THEN
	ItemTemplateAddToCharacter( _ItemTemplate, _Player, _Amount );

// specific comment (since all PROCs are added, well, does not need to come without any 'real' reward)
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardComment( _Reward, (STRING)_Comment )
THEN
	Launch_PlayerComment( _Player, _Comment );

// set a global flag
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardEvent( _Reward, (STRING)_Event )
THEN
	GlobalSetEvent( _Event );


// HEY, the database used here ALREADY contained some spaces, maybe at some point, they had to read their own code
// in some external editor and realised that this shit is unreadable without coloring and structural formatting
PROC
	ProcShovelRewards( (CHARACTER)_Player, (STRING)_Reward )
	AND
	DB_ShovelRewardSurface( _Reward, (TRIGGER)_Trigger, (STRING)_Type, (REAL)_Radius )
THEN
	TriggerCreateSurface( _Trigger, _Type, _Radius );
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
