#TEMPLATE "_SKILLFROMITEM_Base" : XC_Scroll_Air_A_AvatarOfStorms, Target_EnemyImmuneToElectrifying

INIT
CHARACTER:__Me
FLOAT:%SkillTargetScore_XC_Scroll_Air_A_AvatarOfStorms=-1000000
// [GLOBAL_VARS]
// [~GLOBAL_VARS]

EVENTS

// [EVENTS]
// [~EVENTS]

// Calculate the priority of the skill
EVENT CalculateScore_XC_Scroll_Air_A_AvatarOfStorms
VARS
	// [CALC_VARS]
	// [~CALC_VARS]
ON
	OnFunction("CalculateScore_XC_Scroll_Air_A_AvatarOfStorms")
ACTIONS
	Set(%SkillTargetScore_XC_Scroll_Air_A_AvatarOfStorms, -1000000)

	// [CALC_ACTIONS_PRE]
	// [~CALC_ACTIONS_PRE]
	// [CALC_ACTIONS]
	IterateCharactersInCombat(__Me, "CalculateTarget_XC_Scroll_Air_A_AvatarOfStorms", Random, Vitality)
	IF "!c1"
		IsEqual(%SkillTargetChar_XC_Scroll_Air_A_AvatarOfStorms, null)
	THEN
		Add(%ActionScore_XC_Scroll_Air_A_AvatarOfStorms, %SkillTargetScore_XC_Scroll_Air_A_AvatarOfStorms)
	ENDIF
	// [~CALC_ACTIONS]

	
	
// Calculate the character we should attack
EVENT CalculateTarget_XC_Scroll_Air_A_AvatarOfStorms
VARS	
	CHARACTER:_Char
	// [CALC_TARGET_VARS]
	FLOAT:_StatAirResistance
	FLOAT:_Score
	FLOAT:_SkillRangeMin
	FLOAT:_SkillRangeMax
	FLOAT:_DistanceToChar
	FLOAT:_DistanceScore
	// [~CALC_TARGET_VARS]
ON
	OnIterateCharacter(_Char, "CalculateTarget_XC_Scroll_Air_A_AvatarOfStorms")	
ACTIONS
	// [CALC_CHAR_TARGET_ACTIONS_PRE]
	Set(_Score, 0.0)
	// [~CALC_CHAR_TARGET_ACTIONS_PRE]
	// [CALC_CHAR_TARGET_ACTIONS]
	IF "(!c1&!c2&!c3)&((c4)|c5)&(!(c6&c7))&(c8)&(c9)&(c10)"
	    CharacterIsDead(_Char) // c1
	    CharacterHasStatus(_Char, INVISIBLE) // c2
	    CharacterHasStatus(_Char, SNEAKING) // c3
	    CharacterHasBeenHitBy(_Char, Air) // c4
	    CharacterHasHadStatus(_Char, STUNNED) // c5
	    CharacterGetStat(_StatAirResistance, _Char, AirResistance) // c6
	    IsGreaterThen(_StatAirResistance, 99) // c7
	    CharacterIsAlly(__Me, _Char) // c8
	    CharacterGetSkillRange(_SkillRangeMin, _SkillRangeMax, __Me, %SkillID_XC_Scroll_Air_A_AvatarOfStorms) // c9
	    GetDistance(_DistanceToChar, __Me, _Char) // c10
	THEN
	    // Hostile count score calculation
	    Add(_Score, 10.0) // HostileWeight
	    
	    // Range score calculation
	    Set(_DistanceScore, _DistanceToChar)
	    IF "(c1)"
	        IsGreaterThen(_DistanceScore, _SkillRangeMax) // c1
	    THEN
	        Subtract(_DistanceScore, _SkillRangeMax)
	        Multiply(_DistanceScore, -1.0)
	    ELIF "(c1)"
	        IsLessThen(_DistanceScore, _SkillRangeMin) // c1
	    THEN
	        Subtract(_DistanceScore, _SkillRangeMin)
	        Multiply(_DistanceScore, 1.0)
	    ELSE 
	        Set(_DistanceScore, 0.0)
	    ENDIF
	    Add(_Score, _DistanceScore)
	    
	    // Can see score calculation
	    IF "!c1"
	    	CharacterCanSee(__Me, _Char)
	    THEN
	    	Add(_Score, -10.0)
	    ENDIF
	    
	    IF "c1"
	    	IsGreaterThen(_Score, %SkillTargetScore_XC_Scroll_Air_A_AvatarOfStorms)
	    THEN
	    	Set(%SkillTargetChar_XC_Scroll_Air_A_AvatarOfStorms, _Char)
	    	Set(%SkillTargetScore_XC_Scroll_Air_A_AvatarOfStorms, _Score)
	    ENDIF	
	ENDIF
	// [~CALC_CHAR_TARGET_ACTIONS]
	
	
	
	
	
	
	
	
	